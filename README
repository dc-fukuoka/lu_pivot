asymmetric linear system solver by using LU decomposition + partial pivoting.
this is a direct method, so not so suitable for parallelization. (just for my study)
it is parallelized by OpenMP, but many loop form is triangular(like: do j=1,size; do i=1,j), load balance is not good.
and this is for a study of FEM.

$ make
$ ./a.out
$ OMP_NUM_THREADS=1 ./a.out
 size:        1024
 time[s]:   2.68140000000000
 check the result: calc res = b - A*x
 residual:  1.059085265505628E-015

$ OMP_NUM_THREADS=16 KMP_AFFINITY=compact ./a.out
 size:        1024
 time[s]:  0.284400000000000
 check the result: calc res = b - A*x
 residual:  1.059085265505628E-015

* for a comparison, the case with BiCGSTAB method + 16 threads:

$ OMP_NUM_THREADS=16 KMP_AFFINITY=compact ./a.out
 size:        1024
 BiCGSTAB method converged.
 iter, res:         161  7.729346016224966E-011
 time[s]:  9.450000000000000E-002
 check the result: calc res = b - A*x
 residual:  7.729346016224966E-011

the CPU used is Intel(R) Xeon(R) CPU E5-2680 0 @ 2.70GHz(8 cores), 2 sockets.
